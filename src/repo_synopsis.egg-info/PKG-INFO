Metadata-Version: 2.2
Name: repo_synopsis
Version: 0.3.0
Summary: Application that uses an LLM to index the contents of a repository and generate a synopsis.
Author-email: Alex Jensen <thanotosq@gmail.com>
License: MIT
Keywords: streamlit,python,shutils
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Programming Language :: Python
Requires-Python: >=3.11.0
Description-Content-Type: text/markdown
Requires-Dist: streamlit
Requires-Dist: pytest
Requires-Dist: shutils
Requires-Dist: pytest-cov>=6.0.0
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: transformers>=4.49.0
Requires-Dist: torch>=2.6.0

# Streamlit Application

## Description

This application is a Streamlit-based repository analysis tool that generates comprehensive synopses of code repositories. It uses LLM (Language Learning Model) providers like Groq, Cerberas, SombaNova, and Gemini to analyze code files and provide descriptions and use cases for each file.

## Features

- Directory tree visualization
- File language detection
- Token count analysis
- LLM-powered file descriptions and use cases
- Event logging
- Multiple LLM provider support (Groq, Cerberas, SombaNova, Gemini)

## Usage Instructions

1. Clone this repository
2. Navigate to the project directory
3. Install dependencies using uv:
   ```bash
   uv pip install -r requirements.txt
   ```
4. Run the application:
   ```bash
   streamlit run src/streamlit_app/streamlit_app.py
   ```

## Directory Tree

```
.
├── __init__.py
├── __pycache__/
├── event_log.txt
├── pyproject.toml
├── README.md
├── requirements.txt
├── src/
│   ├── repo_synopsis.egg-info/
│   ├── streamlit_app/
│   │   ├── __init__.py
│   │   └── streamlit_app.py
│   └── test_app/
│       └── test_app.py
└── uv.lock
```

## Dependencies

- streamlit
- pytest
- shutils
- pytest-cov>=6.0.0
- numpy
- pandas

## Development

### Testing

Run the tests using pytest:
```bash
pytest src/test_app/test_app.py -v
```

## Changelog

### v0.2.0 - Current
- Added multiple LLM provider support
- Implemented comprehensive test suite
- Added file analysis features (token count, language detection)
- Improved error handling and logging

### v0.1.0 - Initial Release
- Initial commit with basic Streamlit application setup

## License

MIT License

Copyright (c) 2025 Alex Jensen (thanotosq@gmail.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```

Here are the *SEARCH/REPLACE* blocks to create the `requirements.txt` file:

requirements.txt
```text
<<<<<<< SEARCH
